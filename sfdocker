#!/usr/bin/env python

# Imports #
import sys
# Our modules import #
from modules.config import main as config
import modules.colors as colors
from modules.general import main

CONSOLE_PATH = 'app/console'
COMPOSE = 'docker-compose'
SHELL_C = 'bash -c'
SYMFONY_VERSION = ''
CONTAINER = ''
DEFAULT_USER = ''

try:
    def read_config():
        global SYMFONY_VERSION
        global CONTAINER
        global DEFAULT_USER

        config_file_content = config.read_config_file()
        SYMFONY_VERSION = config_file_content[0]
        CONTAINER = config_file_content[1]
        DEFAULT_USER = config_file_content[2]


    if config.is_config_file_empty():
        config.set_configuration()
        read_config()
    else:
        read_config()

    if len(sys.argv) < 2:
        main.no_args()

    if sys.argv[1] == 'config':
        config.set_configuration()

    if int(SYMFONY_VERSION) == 4 or int(SYMFONY_VERSION) == 3:
        CONSOLE_PATH = 'bin/console'

    EXEC = COMPOSE + ' exec --user ' + DEFAULT_USER
    EXEC_T = COMPOSE + 'exec -T --user ' + DEFAULT_USER

    # Docker #
    if sys.argv[1] == 'start':
        main.run(COMPOSE + ' start')

    if sys.argv[1] == 'stop':
        main.run(COMPOSE + ' stop')

    if sys.argv[1] == 'build':
        main.run(COMPOSE + ' up -d --build')

    if sys.argv[1] == 'create':
        main.run(COMPOSE + ' up -d')

    if sys.argv[1] == 'restart':
        main.run(COMPOSE + ' restart')

    if sys.argv[1] == 'ps':
        main.run(COMPOSE + ' ps')

    # Symfony console #
    if sys.argv[1] == 'console':
        args = main.get_arguments(sys.argv)
        main.run(EXEC + CONTAINER + SHELL_C + 'php ' + CONSOLE_PATH + args)

except KeyboardInterrupt:
    print '\n'
    print colors.OKGREEN + config.MESSAGES['bye'] + colors.ENDC
